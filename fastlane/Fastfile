desc "push release cocoapod"
lane :release do
    release_version = "1.20.0-beta2" #sh("git describe").strip
    release_track = ""
    COCOA_DEPLOY_REPO = "cocoa-pods"

    if release_version.start_with?("1")
        release_track = "v1"
    elsif release_version.start_with?("2")
        release_track = "v2"
    else 
        raise "Invalid release track: " + release_version
    end
    release_dir = '.release'

    spec = read_podspec(path: "Specs/BitmovinAnalyticsCollector.#{release_track}.podspec.json")
    spec_output_path = "#{release_dir}/BitmovinAnalyticsCollector.podspec.json"
    spec["version"] = release_version
    spec["source"]["tag"] = release_version

    # cocoapod_deploy_key_path="#{release_dir}/cocoapod-deploy.id_rsa"
    # Dir.chdir("..") do
    #   unless File.exists?(cocoapod_deploy_key_path)
    #     File.write(cocoapod_deploy_key_path, "-----BEGIN OPENSSH PRIVATE KEY-----\n") #Keys need to be created with macbook
    #     File.write(cocoapod_deploy_key_path, options[:COCOA_DEPLOY_KEY], mode: "a")
    #     File.write(cocoapod_deploy_key_path, "\n-----END OPENSSH PRIVATE KEY-----\n", mode: "a") #Keys need to be created with macbook
    #   end
    # end

    Dir.chdir("..") do
      Dir.mkdir(release_dir) unless File.exists?(release_dir)
      File.write(spec_output_path,JSON.pretty_generate(spec))

    #   sh("ssh-agent", "sh", "-c",
      sh(#"sh", "-c",
        # "chmod 0600 #{cocoapod_deploy_key_path};"\
        # "ssh-add #{cocoapod_deploy_key_path};"\
        "git config --global user.name 'Bitmovin Release Automation';"\
        "git config --global user.email support@bitmovin.com;"\
        "bundle exec pod repo add bm-#{COCOA_DEPLOY_REPO} git@github.com:rolandgriesser/#{COCOA_DEPLOY_REPO}.git || bundle exec pod repo update bm-#{COCOA_DEPLOY_REPO};"\
        "bundle exec pod repo push bm-#{COCOA_DEPLOY_REPO} #{spec_output_path} --allow-warnings --skip-import-validation --skip-tests")
    end
end